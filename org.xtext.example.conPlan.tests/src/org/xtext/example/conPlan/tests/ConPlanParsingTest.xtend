/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.conPlan.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.xtext.example.conPlan.conPlan.Model
import org.eclipse.xtext.testing.validation.ValidationTestHelper
import org.xtext.example.conPlan.conPlan.Conference
import org.xtext.example.conPlan.conPlan.ConPlanPackage
import org.xtext.example.conPlan.validation.ConPlanValidator

@RunWith(XtextRunner)
@InjectWith(ConPlanInjectorProvider)
class ConPlanParsingTest {
	@Inject ParseHelper<Model> parseHelper
	@Inject extension ParseHelper<Model> 
	@Inject extension ValidationTestHelper
	
// !!!!	@Inject extension ParseHelper<Model> => _parseHelper.parse.... 

    //Testing the parser
//	@Test
//	def void testCorrectParsing(){
//		'''"The big data"{
//			Description: " we will..."
//			Speakers: "Sebastien" ("itemis AG")
//		}
//		Rooms {
//				Argos
//				Diamant
//				Cassiopee
//				Spot
//			}
//			Conference "EclipseCon2017" Schedule {
//				Day july 21 , 2017 {
//					Slot 09 :00- 09 :30 {
//						Spot: "The big data"
//					}
//				}
//			}'''.parse.assertNoErrors			
//	}
//	@Test
//	def void testParsing(){
//		val model='''
//		Conference "EclipseCon2017" Schedule {
//				Day july 21 , 2017 {
//					Slot 09 :00- 09 :30 {
//						Spot: "The big data"
//					}
//				}
//		}
//		'''.parse
//		val con = model.conference.get(0)
//		Assert.assertEquals("EclipseCon2017",con.name)
//		
//		val day = con.days.get(0)
//		Assert.assertEquals("july",day.month)
//		
//		'''Tracks{
//			XT: "Xtext"
//			COD: "Cloud Of Dev"
//			}
//			Levels{
//				Beginner: 1
//				Advanced: 3
//			}
//			"the big data"{
//			Track: XT
//			Level: Beginner
//			Description: "we will introduce..."
//			Speakers: "Seabstien"
//		}'''.parse.assertNoErrors
//		
//	}
	//Testing the Validator => doesnt work !!!!!
	//maybe I should create another JUnit class
	//to test the validator
	@Test
	def void testTalkTwiceAssigned(){
		'''"The big data"{
				Description: " we will..."
				Speakers: "Sebastien"
			}
			Rooms {
				Argos
				Diamant
				Cassiopee
				Spot
			}
			Conference "EclipseCon2017" Schedule {
				Day july 21 , 2017 {
					Slot 09 :00- 09 :30 {
						Spot: "The big data"
					}
					Slot 10 :00- 10 :30{
ллл						Argos: "The big data"
					}
				}
			}
		'''.parse.noTalkTwiceAssigned("EclipseCon2017")
	}
	def private noTalkTwiceAssigned(Model model,String conName){
		model.assertError(
			ConPlanPackage.eINSTANCE.conference,
			'Talk already assigned'
		)
	}
	
	
}
